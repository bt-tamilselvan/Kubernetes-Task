Task: AWS S3, EC2, and Load Balancer Configuration
Description:
This project involves creating an S3 bucket with no public access, uploading files to it, and viewing the logs in CloudWatch. Additionally, two EC2 instances are launched and connected to an Application Load Balancer (ALB), ensuring that traffic is routed through the load balancer's IP address.

Tech Stacks Used:
AWS S3
AWS EC2
AWS Load Balancer
Steps:
1. Create an S3 Bucket with No Public Access:
Navigate to the AWS S3 Console and create a new S3 bucket.
Ensure that Block all public access is enabled.
Upload test files (e.g., text or image files) to the bucket.
2. Enable CloudWatch Logs for S3:
Configure CloudWatch to track access logs for the S3 bucket.
Set up a CloudWatch Logs group to capture logs of file uploads and access.
3. Launch Two EC2 Instances:
Create two EC2 instances using your preferred OS (e.g., Amazon Linux or Ubuntu).
Configure security groups to allow HTTP access.
4. Set Up Application Load Balancer:
Create an Application Load Balancer (ALB) in the AWS EC2 Console.
Set the listener to HTTP on port 801.
Create a Target Group and register the two EC2 instances (Server 1 and Server 2).
Ensure both instances are healthy in the Target Group.
5. Test Load Balancer:
Access the ALB URL (e.g., http://myalb-xxxxxxxxxx.elb.amazonaws.com:801/).
Refresh the page to verify traffic is alternating between Server 1 and Server 2.
6. Submit Your Work:
Push all your work, including configuration files, scripts, and screenshots, to your GitHub repository.
Submit the GitHub repository URL along with the URLs for the output screenshots in the portal.